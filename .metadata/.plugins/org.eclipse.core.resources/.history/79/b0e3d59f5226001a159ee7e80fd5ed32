package co.travelini.backendservices.service;


import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.stereotype.Service;
import org.springframework.util.StringUtils;
import org.springframework.web.multipart.MultipartFile;

import co.travelini.backendservices.configurationproperties.FileStorageProperties;
import co.travelini.backendservices.entity.TraveliniAccount;
import co.travelini.backendservices.repo.TraveliniAccountRepo;






@Service
public class FileStorageService
{
	private final Path fileStorageLocation;

	
	
	@Autowired
	private TraveliniAccountRepo traveliniAccountRepo;
	
	@Autowired
	public FileStorageService(FileStorageProperties fileStorageProperties) throws Exception
	{
		
		 this.fileStorageLocation = Paths.get(fileStorageProperties.getUploadDir())
	                  .toAbsolutePath().normalize();
		 
		try
		{
			
			Files.createDirectories(this.fileStorageLocation);
		
		}
		catch(Exception e)
		{
	        throw new Exception("Could not create the directory where the uploaded files will be stored.", e);		
		}

	}
	
	
	public String StoreFile(MultipartFile file,long id) throws Exception
	{
	
		//String fileName = StringUtils.cleanPath(file.getOriginalFilename());
	String address = "http://ec2-3-17-156-146.us-east-2.compute.amazonaws.com:8080/images/";
	//String address = "http://ec2-3-17-156-146.us-east-2.compute.amazonaws.com:8080/images//";
	
		//String address = "file:///F:/backend services/backend-services";
		
		 String fileName = StringUtils.cleanPath(id+"Accountid.jpg");
	
		 String fullPath = address.concat(fileName);
		
					
				TraveliniAccount TraveliniAccountId = traveliniAccountRepo.getOneByAccountId(id);
			    System.out.println("image path -> "+fullPath);
				TraveliniAccountId.setImageLocation(fullPath);
				traveliniAccountRepo.save(TraveliniAccountId);
					
		
		 try {
	            // Check if the file's name contains invalid characters
	            if(fileName.contains("..")) 
	            {
	                throw new Exception("Sorry! Filename contains invalid path sequence " + fileName);
	            }

	           Path targetLocation = this.fileStorageLocation.resolve(fileName);
	           // Path targetLocation = this.fileStorageLocation.resolve(fullPath);
	          
	            Files.copy(file.getInputStream(), targetLocation, StandardCopyOption.REPLACE_EXISTING);
	       
	          //  Files.copy(file.getInputStream(), Paths.get(fullPath), StandardCopyOption.REPLACE_EXISTING);
	            //return fileName;
	        } catch (IOException ex) {
	            throw new Exception("Could not store file " + fileName + ". Please try again!", ex);
	        }
		return fileName;		 
		
	}


//	public ResponseEntity<InputStreamResource> getImage(int id) throws IOException 
//	{
//		String path = "file:///F:/backend services/backend-services/pictures/";
//		String images = StringUtils.cleanPath(id+"Accountid.jpg");
//	        var imgFile = new ClassPathResource("pictures/"+images);
//	        return ResponseEntity
//	                .ok()
//	                .contentType(MediaType.IMAGE_JPEG)
//	                .body(new InputStreamResource(imgFile.getInputStream()));
//	}


	


}
